{
  "name": "time-chunked-stream",
  "version": "0.1.0",
  "author": {
    "name": "Jonas Finnemann Jensen",
    "email": "jopsen@gmail.com"
  },
  "description": "Time-based Streaming Chunking",
  "license": "MIT",
  "scripts": {
    "test": "nodeunit index_test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jonasfj/time-chunked-stream.git"
  },
  "dependencies": {
    "buffer-builder": "0.1.0"
  },
  "devDependencies": {
    "nodeunit": "0.8.6"
  },
  "readme": "Time-based Streaming Chunking\n=============================\n\nA node.js deplux stream that buffers input for a while before outputting it.\nThis is useful if you have an readable-stream producing many small chunks that\nyou want to pipe to a writable-stream and the writable-stream only handles large\nchunks efficiently.\n\nConsider the following setup:\n  * `streamIn`, produces a lot of small chunks (e.g. output from a subprocess),\n  * `streamOut`, takes a long time to write a single chunk regardless of size\n    (e.g. sends the chunk over network to a database and commits)\n\nNow, `streamIn.pipe(streamOut)` would be a bad idea, because `streamOut` has a\nlarge overhead for each chunk regardless of size. Instead using\n`streamIn.pipe(new TimeChunkedStream({timeout: 5000})).pipe(streamOut)` would\nbuffer the chunks for 5 seconds and then write them to `streamOut`.\n\nThis is mainly useful for logging and thing where you want to commit and the\ncommit overhead is significant. If you want to optimizing file-writes or cases\nwith plenty of data consider using\n[buffered-stream](https://www.npmjs.org/package/buffered-stream) instead.\n\nLicense\n-------\nThe `time-chunked-stream` library is released on the MIT license, see the\n`LICENSE` for complete license.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jonasfj/time-chunked-stream/issues"
  },
  "homepage": "https://github.com/jonasfj/time-chunked-stream",
  "_id": "time-chunked-stream@0.1.0",
  "dist": {
    "shasum": "80f6549323a0b6bcbd071b60af54d86a3b5306cc"
  },
  "_from": "time-chunked-stream@0.1.0",
  "_resolved": "https://registry.npmjs.org/time-chunked-stream/-/time-chunked-stream-0.1.0.tgz"
}
